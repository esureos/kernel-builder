name: Build GKI Kernel

on:
  workflow_dispatch:
    inputs:
      kernel_branch:
        description: "Kernel branch to build (e.g., common-android12-5.10)"
        required: true
        default: "common-android12-5.10"
      build_config:
        description: "Build config file (e.g., common/build.config.gki.aarch64)"
        required: true
        default: "common/build.config.gki.aarch64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout GitHub repository
        uses: actions/checkout@v4

      # Step 2: 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev libncurses5-dev
          sudo apt-get install -y ccache git-core python3 curl gcc-aarch64-linux-gnu zip

      # Step 3: 清理磁盘空间
      - name: Clean up disk space
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/local/share/boost /usr/share/dotnet /usr/local/lib/android
          sudo rm -rf /opt/ghc /usr/local/lib/node_modules /usr/lib/jvm
          df -h

      # Step 4: 安装 repo 工具
      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "PATH=$HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH" >> $GITHUB_ENV

      # Step 5: 同步内核源码
      - name: Sync AOSP kernel source
        run: |
          mkdir -p kernel
          cd kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b ${{ github.event.inputs.kernel_branch }} --depth=1
          repo sync -j$(nproc) --no-clone-bundle --optimized-fetch

      # Step 6: 构建内核
      - name: Build kernel with ThinLTO
        run: |
          cd kernel
          LTO=thin BUILD_CONFIG=${{ github.event.inputs.build_config }} build/build.sh > build.log 2>&1 || true
      - name: Upload build log
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: kernel/build.log

      # Step 7: 打包 AnyKernel3 ZIP 文件
      - name: Package AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3.git anykernel3
          rm -rf anykernel3/{.*,modules,patch,randisk,README.md}

          if [ -f kernel/out/arch/arm64/boot/Image.gz ]; then
            cp kernel/out/arch/arm64/boot/Image.gz anykernel3/zImage
          elif [ -f kernel/out/arch/arm64/boot/Image ]; then
            cp kernel/out/arch/arm64/boot/Image anykernel3/zImage
          else
            echo "Error: No kernel image found!" && exit 1
          fi

          mkdir -p anykernel3/dtb
          cp kernel/out/arch/arm64/boot/dts/*.dtb anykernel3/dtb/ || echo "No DTB files found, skipping."

          mkdir -p anykernel3/modules
          cp kernel/out/lib/modules/**/*.ko anykernel3/modules/ || echo "No kernel modules found, skipping."

          cd anykernel3
          zip -r9 AnyKernel3.zip ./*

      - name: Upload AnyKernel3 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-package
          path: anykernel3/AnyKernel3.zip

      - name: Upload kernel config
        uses: actions/upload-artifact@v4
        with:
          name: kernel-config
          path: kernel/out/.config
