name: Build GKI Kernel

on:
  workflow_dispatch:
    inputs:
      kernel_branch:
        description: "Kernel branch to build (e.g., common-android12-5.10)"
        required: true
        default: "common-android12-5.10"
      build_config:
        description: "Build config file (e.g., common/build.config.gki.aarch64)"
        required: true
        default: "common/build.config.gki.aarch64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout GitHub repository
        uses: actions/checkout@v4

      # Step 2: 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev libncurses5-dev
          sudo apt-get install -y ccache git-core python3 curl gcc-aarch64-linux-gnu

      # Step 3: 安装 repo 工具
      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "PATH=$HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH" >> $GITHUB_ENV

      # Step 4: 同步内核源码
      - name: Sync AOSP kernel source
        run: |
          mkdir -p kernel
          cd kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b ${{ github.event.inputs.kernel_branch }}
          repo sync -j$(nproc) --no-clone-bundle --optimized-fetch

      # Step 5: 构建内核
      - name: Build kernel with ThinLTO
        run: |
          cd kernel
          # 执行构建命令
          LTO=thin BUILD_CONFIG=${{ github.event.inputs.build_config }} build/build.sh

      # Step 6: 打包 AnyKernel3 ZIP 文件
      - name: Package AnyKernel3
        run: |
          # 克隆 AnyKernel3 项目
          git clone https://github.com/osm0sis/AnyKernel3.git anykernel3
          rm -rf anykernel3/{.*,modules,patch,randisk,README.md}
          # 复制内核镜像
          cp kernel/out/arch/arm64/boot/Image.gz anykernel3/

          # 复制设备树文件（dtb）
          mkdir -p anykernel3/dtb
          cp kernel/out/arch/arm64/boot/dts/*.dtb anykernel3/dtb/

          # 如果需要内核模块，复制到模块目录
          mkdir -p anykernel3/modules
          cp kernel/out/lib/modules/**/*.ko anykernel3/modules/ || true

          # 压缩打包 AnyKernel3
          cd anykernel3
          zip -r9 AnyKernel3.zip ./*

      # Step 7: 上传 AnyKernel3 ZIP 文件
      - name: Upload AnyKernel3 ZIP
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-package
          path: anykernel3/AnyKernel3.zip

      # Step 8: 上传内核镜像文件
      - name: Upload kernel image
        uses: actions/upload-artifact@v4
        with:
          name: kernel-image
          path: |
            kernel/out/arch/arm64/boot/Image.gz

      # Step 9: 上传模块文件
      - name: Upload kernel modules
        uses: actions/upload-artifact@v4
        with:
          name: kernel-modules
          path: kernel/out/lib/modules/**/*.ko

      # Step 10: 上传设备树文件
      - name: Upload dtb files
        uses: actions/upload-artifact@v4
        with:
          name: dtb-files
          path: kernel/out/arch/arm64/boot/dts/*.dtb
