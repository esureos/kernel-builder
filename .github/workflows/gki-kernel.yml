name: Build Android GKI Kernel

on:
  workflow_dispatch:
    inputs:
      kernel_branch:
        description: "Kernel branch to build (e.g., common-android12-5.10)"
        required: true
        default: "common-android12-5.10"
      build_config:
        description: "Build config file (e.g., common/build.config.gki.aarch64)"
        required: true
        default: "common/build.config.gki.aarch64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout GitHub repository
        uses: actions/checkout@v4

      # Step 2: 安装依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev libncurses5-dev
          sudo apt-get install -y ccache git-core python3 curl gcc-aarch64-linux-gnu

      # Step 3: 安装 repo 工具
      - name: Install repo tool
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "PATH=$HOME/bin:$PATH" >> $GITHUB_ENV

      # Step 4: 同步内核源码
      - name: Sync AOSP kernel source
        run: |
          mkdir -p kernel
          cd kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b ${{ github.event.inputs.kernel_branch }}
          repo sync -j$(nproc) --no-clone-bundle --optimized-fetch

      # Step 5: 构建内核
      - name: Build kernel with ThinLTO
        run: |
          cd kernel
          # 确保 Clang 工具链路径正确
          if [ -d "prebuilts/clang/host/linux-x86/clang-r*/bin" ]; then
            export PATH=$PWD/prebuilts/clang/host/linux-x86/clang-r*/bin:$PATH
          else
            echo "Clang toolchain not found" && exit 1
          fi

          # 执行构建命令
          LTO=thin BUILD_CONFIG=${{ github.event.inputs.build_config }} build/build.sh

      # Step 6: 上传构建结果
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: kernel/out/
